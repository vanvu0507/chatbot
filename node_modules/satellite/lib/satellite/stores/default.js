// Generated by CoffeeScript 1.3.1
(function() {
  var memory,
    _this = this;

  memory = {
    addresses: [],
    targetAddress: null,
    roundRobin: {
      targetAddressIndex: 0
    },
    stickySessions: {
      sessions: {}
    }
  };

  exports.addresses = {
    add: function(address, cb) {
      memory.addresses.push(address);
      return cb('success');
    },
    remove: function(address, cb) {
      var index;
      index = memory.addresses.indexOf(address);
      memory.addresses.splice(index, 1);
      return cb('success');
    },
    get: function(cb) {
      return cb(memory.addresses);
    }
  };

  exports.targetAddress = {
    get: function(cb) {
      return cb(memory.targetAddress);
    },
    set: function(value, cb) {
      memory.targetAddress = value;
      return cb(value);
    }
  };

  exports.targetAddressIndex = {
    get: function(cb) {
      return cb(memory.roundRobin.targetAddressIndex);
    },
    increment: function(cb) {
      memory.roundRobin.targetAddressIndex += 1;
      return cb('success');
    },
    reset: function(cb) {
      memory.roundRobin.targetAddressIndex = 0;
      return cb('success');
    }
  };

  exports.stickySessions = {
    get: function(keyOrCb, cb) {
      var items;
      if (cb == null) {
        cb = null;
      }
      items = memory.stickySessions.sessions;
      if (cb === null) {
        return keyOrCb(items);
      } else {
        return cb(items[keyOrCb]);
      }
    },
    set: function(key, value, response) {
      memory.stickySessions.sessions[key] = value;
      return response('success');
    },
    "delete": function(key, cb) {
      delete memory.stickySessions.sessions[key];
      return cb('success');
    }
  };

}).call(this);
